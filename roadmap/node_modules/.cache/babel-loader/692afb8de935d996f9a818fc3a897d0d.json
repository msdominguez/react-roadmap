{"ast":null,"code":"var _jsxFileName = \"/Users/msd/Documents/vg/TAF + React Roadmap/react-roadmap (stale)/roadmap/src/components/fundamental/conditional-rendering.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OptionOne = () => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: \"If statement 1\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 3,\n  columnNumber: 25\n}, this);\n\n_c = OptionOne;\n\nconst OptionTwo = () => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: \"If statement 2\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 25\n}, this);\n\n_c2 = OptionTwo;\n\nconst Inline = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: props ? /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Inline 1\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 17\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Inline 2\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 35\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\n\n_c3 = Inline;\n\nclass ConditionalRendering extends React.Component {\n  ifStatement() {\n    if (this.props.name) {\n      return /*#__PURE__*/_jsxDEV(OptionOne, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(OptionTwo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Conditional Rendering:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), this.ifStatement(), \" \", /*#__PURE__*/_jsxDEV(Inline, {\n        props: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ConditionalRendering;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"OptionOne\");\n$RefreshReg$(_c2, \"OptionTwo\");\n$RefreshReg$(_c3, \"Inline\");","map":{"version":3,"sources":["/Users/msd/Documents/vg/TAF + React Roadmap/react-roadmap (stale)/roadmap/src/components/fundamental/conditional-rendering.js"],"names":["React","OptionOne","OptionTwo","Inline","props","ConditionalRendering","Component","ifStatement","name","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,SAAS,GAAG,mBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxB;;KAAMA,S;;AACN,MAAMC,SAAS,GAAG,mBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxB;;MAAMA,S;;AAEN,MAAMC,MAAM,GAAIC,KAAD,iBACb;AAAA,YAAMA,KAAK,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAH,gBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,QADF;;MAAMD,M;;AAIN,MAAME,oBAAN,SAAmCL,KAAK,CAACM,SAAzC,CAAmD;AACjDC,EAAAA,WAAW,GAAG;AACZ,QAAI,KAAKH,KAAL,CAAWI,IAAf,EAAqB;AACnB,0BAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO;AACL,0BAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,KAAKF,WAAL,EAFH,oBAEuB,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAf;AAAA;AAAA;AAAA;AAAA,cAFvB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAhBgD;;AAmBnD,eAAeF,oBAAf","sourcesContent":["import React from \"react\";\n\nconst OptionOne = () => <p>If statement 1</p>;\nconst OptionTwo = () => <p>If statement 2</p>;\n\nconst Inline = (props) => (\n  <div>{props ? <p>Inline 1</p> : <p>Inline 2</p>}</div>\n);\n\nclass ConditionalRendering extends React.Component {\n  ifStatement() {\n    if (this.props.name) {\n      return <OptionOne />;\n    } else {\n      return <OptionTwo />;\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Conditional Rendering:</h1>\n        {this.ifStatement()} <Inline props={true} />\n      </div>\n    );\n  }\n}\n\nexport default ConditionalRendering;\n"]},"metadata":{},"sourceType":"module"}