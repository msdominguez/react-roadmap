{"ast":null,"code":"var _jsxFileName = \"/Users/msd/Documents/vg/TAF + React Roadmap/react-roadmap/roadmap/src/components/fundamental/component-life-cycle/component-will-unmount.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ComponentWillUnmount extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isUnmounted: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"componentWillUnmount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.setState({\n          isUnmounted: true\n        }),\n        children: \"Unmount item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), this.state.isUnmounted ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"is unmounted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 35\n      }, this) : /*#__PURE__*/_jsxDEV(Item, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 57\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Item extends React.Component {\n  componentWillUnmount() {\n    console.log(\"component will unmount\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ComponentWillUnmount;","map":{"version":3,"sources":["/Users/msd/Documents/vg/TAF + React Roadmap/react-roadmap/roadmap/src/components/fundamental/component-life-cycle/component-will-unmount.js"],"names":["React","ComponentWillUnmount","Component","constructor","props","state","isUnmounted","render","setState","Item","componentWillUnmount","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,oBAAN,SAAmCD,KAAK,CAACE,SAAzC,CAAmD;AACjDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKC,QAAL,CAAc;AAAEF,UAAAA,WAAW,EAAE;AAAf,SAAd,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAKG,KAAKD,KAAL,CAAWC,WAAX,gBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAzB,gBAA+C,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cALlD;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAlBgD;;AAqBnD,MAAMG,IAAN,SAAmBT,KAAK,CAACE,SAAzB,CAAmC;AACjCQ,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD;;AACDL,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAVgC;;AAanC,eAAeN,oBAAf","sourcesContent":["import React from 'react';\n\nclass ComponentWillUnmount extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isUnmounted: false,\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>componentWillUnmount:</h1>\n        <button onClick={() => this.setState({ isUnmounted: true })}>\n          Unmount item\n        </button>\n        {this.state.isUnmounted ? <p>is unmounted</p> : <Item />}\n      </div>\n    );\n  }\n}\n\nclass Item extends React.Component {\n  componentWillUnmount() {\n    console.log(\"component will unmount\");\n  }\n  render() {\n    return (\n      <div>\n        <p>Item</p>\n      </div>\n    );\n  }\n}\n\nexport default ComponentWillUnmount;\n"]},"metadata":{},"sourceType":"module"}