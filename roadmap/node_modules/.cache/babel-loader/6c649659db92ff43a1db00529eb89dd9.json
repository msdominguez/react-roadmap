{"ast":null,"code":"var _jsxFileName = \"/Users/msd/Documents/vg/TAF + React Roadmap/react-roadmap/roadmap/src/components/fundamental/component-life-cycle/should-component-update.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShouldComponentUpdateChild extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(\"should component update\");\n    return nextProps.count !== this.props.count;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"shouldComponentUpdate:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"count: \", this.props.count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.props.onClick,\n        children: \"Increase count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport { ShouldComponentUpdateChild };\n\nclass ShouldComponentUpdate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    };\n    this.increase = this.increase.bind(this);\n  }\n\n  increase() {\n    this.setState({\n      count: this.state.count + 1\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ShouldComponentUpdateChild, {\n      count: this.state.count,\n      onClick: this.increase\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ShouldComponentUpdate;","map":{"version":3,"sources":["/Users/msd/Documents/vg/TAF + React Roadmap/react-roadmap/roadmap/src/components/fundamental/component-life-cycle/should-component-update.js"],"names":["React","ShouldComponentUpdateChild","Component","shouldComponentUpdate","nextProps","nextState","console","log","count","props","render","onClick","ShouldComponentUpdate","constructor","state","increase","bind","setState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,0BAAN,SAAyCD,KAAK,CAACE,SAA/C,CAAyD;AACvDC,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAC1CC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,WAAOH,SAAS,CAACI,KAAV,KAAoB,KAAKC,KAAL,CAAWD,KAAtC;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,8BAAW,KAAKD,KAAL,CAAWD,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWE,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAdsD;;AAiBzD,SAASV,0BAAT;;AAEA,MAAMW,qBAAN,SAAoCZ,KAAK,CAACE,SAA1C,CAAoD;AAClDW,EAAAA,WAAW,CAACJ,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKK,KAAL,GAAa;AAAEN,MAAAA,KAAK,EAAE;AAAT,KAAb;AACA,SAAKO,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDD,EAAAA,QAAQ,GAAG;AACT,SAAKE,QAAL,CAAc;AAAET,MAAAA,KAAK,EAAE,KAAKM,KAAL,CAAWN,KAAX,GAAmB;AAA5B,KAAd;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,0BAAD;AACE,MAAA,KAAK,EAAE,KAAKI,KAAL,CAAWN,KADpB;AAEE,MAAA,OAAO,EAAE,KAAKO;AAFhB;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAlBiD;;AAqBpD,eAAeH,qBAAf","sourcesContent":["import React from 'react';\n\nclass ShouldComponentUpdateChild extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(\"should component update\");\n    return nextProps.count !== this.props.count;\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>shouldComponentUpdate:</h2>\n        <p>count: {this.props.count}</p>\n        <button onClick={this.props.onClick}>Increase count</button>\n      </div>\n    );\n  }\n}\n\nexport { ShouldComponentUpdateChild };\n\nclass ShouldComponentUpdate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { count: 0 };\n    this.increase = this.increase.bind(this);\n  }\n\n  increase() {\n    this.setState({ count: this.state.count + 1 });\n  }\n\n  render() {\n    return (\n      <ShouldComponentUpdateChild\n        count={this.state.count}\n        onClick={this.increase}\n      />\n    );\n  }\n}\n\nexport default ShouldComponentUpdate;\n"]},"metadata":{},"sourceType":"module"}