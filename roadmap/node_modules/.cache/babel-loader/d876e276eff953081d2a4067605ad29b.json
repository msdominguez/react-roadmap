{"ast":null,"code":"var _jsxFileName = \"/Users/msd/Documents/vg/TAF + React Roadmap/react-roadmap/roadmap/src/components/advanced/fiber-architecture.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Child = () => /*#__PURE__*/_jsxDEV(\"li\", {\n  id: \"child\",\n  children: \"Child\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 3,\n  columnNumber: 21\n}, this);\n\n_c = Child;\n{\n  /* <Child/>._owner: <Child/> FiberNode\n  <Child/>._owner.child: Parent <div/> FiberNode\n  <Child/>._owner.child.child:  <h2/> FiberNode (Parent <div/>'s child)\n  <Child/>._owner.child.(memoizedProps|pendingProps).children\n  [0] = <h2/> (Parent <div/>'s child)  React Element\n  [1] = <ul/> (<Child/>'s parent) React Element */\n}\n\nconst FiberArchitecture = () => {\n  const childString = \"<Child/>\";\n  const divString = \"<div/>\";\n  const h2String = \"<h2/>\";\n  const ulString = \"<ul/>\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Fiber Architecture:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"parent\",\n      children: /*#__PURE__*/_jsxDEV(Child, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), console.log(\"<Child/> Fiber\", /*#__PURE__*/_jsxDEV(Child, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 39\n    }, this)._owner), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"FiberNodes return the parent elements through the child property. The child is also a FiberNode object. The child has memoizedProps and pendingProps. These are where the children React Elements of the child FiberNode can be found. The return property returns the parent FiberNode.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingRight: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [childString, \" FiberNode:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Parent \", divString, \" FiberNode:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [h2String, \" FiberNode (Parent \", divString, \"'s child):\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [h2String, \" React Element (Parent \", divString, \"'s child):\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [ulString, \" React Element (\", childString, \"'s parent):\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [childString, \"._owner\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [childString, \"._owner.child\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [childString, \"._owner.child.child\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [childString, \"._owner.child.(memoizedProps|pendingProps).children[0]\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [childString, \"._owner.child.(memoizedProps|pendingProps).children[1]\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = FiberArchitecture;\nexport default FiberArchitecture;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Child\");\n$RefreshReg$(_c2, \"FiberArchitecture\");","map":{"version":3,"sources":["/Users/msd/Documents/vg/TAF + React Roadmap/react-roadmap/roadmap/src/components/advanced/fiber-architecture.js"],"names":["React","Child","FiberArchitecture","childString","divString","h2String","ulString","console","log","_owner","display","justifyContent","paddingRight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,KAAK,GAAG,mBAAM;AAAI,EAAA,EAAE,EAAC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAApB;;KAAMA,K;AAEN;AACE;AACF;AACA;AACA;AACA;AACA;AACC;;AAED,MAAMC,iBAAiB,GAAG,MAAM;AAC9B,QAAMC,WAAW,GAAG,UAApB;AACA,QAAMC,SAAS,GAAG,QAAlB;AACA,QAAMC,QAAQ,GAAG,OAAjB;AACA,QAAMC,QAAQ,GAAG,OAAjB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA,6BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF,EAOGC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,aAAC,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAAD,CAAYC,MAA1C,CAPH,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAeE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,cAAc,EAAE;AAFX,OADT;AAKE,MAAA,SAAS,EAAC,MALZ;AAAA,8BAOE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAE;AAAhB,SAAZ;AAAA,gCACE;AAAA,qBAAIT,WAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,gCAAWC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,qBACGC,QADH,yBACgCD,SADhC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAME;AAAA,qBACGC,QADH,6BACoCD,SADpC;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eASE;AAAA,qBACGE,QADH,sBAC6BH,WAD7B;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAqBE;AAAA,gCACE;AAAA,qBAAIA,WAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,qBAAIA,WAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,qBAAIA,WAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,qBACGA,WADH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AAAA,qBACGA,WADH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmDD,CAxDD;;MAAMD,iB;AA0DN,eAAeA,iBAAf","sourcesContent":["import React from 'react';\n\nconst Child = () => <li id=\"child\">Child</li>;\n\n{\n  /* <Child/>._owner: <Child/> FiberNode\n<Child/>._owner.child: Parent <div/> FiberNode\n<Child/>._owner.child.child:  <h2/> FiberNode (Parent <div/>'s child)\n<Child/>._owner.child.(memoizedProps|pendingProps).children\n[0] = <h2/> (Parent <div/>'s child)  React Element\n[1] = <ul/> (<Child/>'s parent) React Element */\n}\n\nconst FiberArchitecture = () => {\n  const childString = \"<Child/>\";\n  const divString = \"<div/>\";\n  const h2String = \"<h2/>\";\n  const ulString = \"<ul/>\";\n  return (\n    <div className=\"container\">\n      <h2>Fiber Architecture:</h2>\n\n      <ul className=\"parent\">\n        <Child />\n      </ul>\n\n      {console.log(\"<Child/> Fiber\", (<Child />)._owner)}\n      <p>\n        FiberNodes return the parent elements through the child property. The\n        child is also a FiberNode object. The child has memoizedProps and\n        pendingProps. These are where the children React Elements of the child\n        FiberNode can be found. The return property returns the parent\n        FiberNode.\n      </p>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n        }}\n        className=\"card\"\n      >\n        <div style={{ paddingRight: \"1rem\" }}>\n          <p>{childString} FiberNode:</p>\n          <p>Parent {divString} FiberNode:</p>\n          <p>\n            {h2String} FiberNode (Parent {divString}'s child):\n          </p>\n          <p>\n            {h2String} React Element (Parent {divString}'s child):\n          </p>\n          <p>\n            {ulString} React Element ({childString}'s parent):\n          </p>\n        </div>\n\n        <div>\n          <p>{childString}._owner</p>\n          <p>{childString}._owner.child</p>\n          <p>{childString}._owner.child.child</p>\n          <p>\n            {childString}._owner.child.(memoizedProps|pendingProps).children[0]\n          </p>\n          <p>\n            {childString}._owner.child.(memoizedProps|pendingProps).children[1]\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FiberArchitecture;\n"]},"metadata":{},"sourceType":"module"}