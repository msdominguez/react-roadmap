{"ast":null,"code":"var _jsxFileName = \"/Users/msd/Desktop/react-roadmap/roadmap/src/components/component-life-cycle/component-will-unmount.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ComponentWillUnmount extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(() => this.setState({\n      date: new Date()\n    }), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"componentWillUnmount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), this.state.date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ComponentWillUnmount;","map":{"version":3,"sources":["/Users/msd/Desktop/react-roadmap/roadmap/src/components/component-life-cycle/component-will-unmount.js"],"names":["React","ComponentWillUnmount","Component","constructor","props","componentDidMount","timer","setInterval","setState","date","Date","componentWillUnmount","clearInterval","timerID","render","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,oBAAN,SAAmCD,KAAK,CAACE,SAAzC,CAAmD;AACjDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,GAAaC,WAAW,CACtB,MACE,KAAKC,QAAL,CAAc;AACZC,MAAAA,IAAI,EAAE,IAAIC,IAAJ;AADM,KAAd,CAFoB,EAKtB,IALsB,CAAxB;AAOD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKC,OAAN,CAAb;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,KAAKC,KAAL,CAAWN,IAFd;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AA1BgD;;AA6BnD,eAAeR,oBAAf","sourcesContent":["import React from 'react';\n\nclass ComponentWillUnmount extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(\n      () =>\n        this.setState({\n          date: new Date(),\n        }),\n      1000\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>componentWillUnmount:</h1>\n        {this.state.date}\n      </div>\n    );\n  }\n}\n\nexport default ComponentWillUnmount;\n"]},"metadata":{},"sourceType":"module"}