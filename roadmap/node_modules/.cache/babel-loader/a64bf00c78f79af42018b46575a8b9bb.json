{"ast":null,"code":"var _jsxFileName = \"/Users/msd/Documents/vg/TAF + React Roadmap/react-roadmap (stale)/roadmap/src/components/fundamental/conditional-rendering.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OptionOne = () => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: \" If statement 1 \"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 3,\n  columnNumber: 25\n}, this);\n\n_c = OptionOne;\n\nconst OptionTwo = () => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: \" If statement 2 \"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 25\n}, this);\n\n_c2 = OptionTwo;\n\nconst Inline = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [\" \", props ? /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \" Inline 1 \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 21\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Inline 2\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 44\n  }, this), \" \"]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 29\n}, this);\n\n_c3 = Inline;\n\nclass ConditionalRendering extends React.Component {\n  ifStatement() {\n    if (this.props.name) {\n      return /*#__PURE__*/_jsxDEV(OptionOne, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(OptionTwo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Conditional Rendering: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), \" \", this.ifStatement(), \" \", /*#__PURE__*/_jsxDEV(Inline, {\n        props: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 71\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 18\n    }, this);\n  }\n\n}\n\nexport default ConditionalRendering;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"OptionOne\");\n$RefreshReg$(_c2, \"OptionTwo\");\n$RefreshReg$(_c3, \"Inline\");","map":{"version":3,"sources":["/Users/msd/Documents/vg/TAF + React Roadmap/react-roadmap (stale)/roadmap/src/components/fundamental/conditional-rendering.js"],"names":["React","OptionOne","OptionTwo","Inline","props","ConditionalRendering","Component","ifStatement","name","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,SAAS,GAAG,mBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxB;;KAAMA,S;;AACN,MAAMC,SAAS,GAAG,mBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxB;;MAAMA,S;;AAEN,MAAMC,MAAM,GAAIC,KAAD,iBAAa;AAAA,kBAChBA,KAAK,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAH,gBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADf;AAAA;AAAA;AAAA;AAAA;AAAA,QAA5B;;MAAMD,M;;AAIN,MAAME,oBAAN,SAAmCL,KAAK,CAACM,SAAzC,CAAmD;AAC/CC,EAAAA,WAAW,GAAG;AACV,QAAI,KAAKH,KAAL,CAAWI,IAAf,EAAqB;AACjB,0BAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEO;AACH,0BAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBAAS;AAAA,8BAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFK,OAGgC,KAAKF,WAAL,EAHhC,oBAGqD,QAAE,MAAF;AAAS,QAAA,KAAK,EAAK;AAAnB;AAAA;AAAA;AAAA;AAAA,cAHrD;AAAA;AAAA;AAAA;AAAA;AAAA,YAAT;AAOH;;AAjB8C;;AAoBnD,eAAeF,oBAAf","sourcesContent":["import React from \"react\";\n\nconst OptionOne = () => < p > If statement 1 < /p>;\nconst OptionTwo = () => < p > If statement 2 < /p>;\n\nconst Inline = (props) => ( <\n    div > { props ? < p > Inline 1 < /p> : <p>Inline 2</p > } < /div>\n);\n\nclass ConditionalRendering extends React.Component {\n    ifStatement() {\n        if (this.props.name) {\n            return <OptionOne / > ;\n        } else {\n            return <OptionTwo / > ;\n        }\n    }\n\n    render() {\n        return ( <\n            div >\n            <\n            h1 > Conditional Rendering: < /h1> { this.ifStatement() } < Inline props = { true }\n            /> <\n            /div>\n        );\n    }\n}\n\nexport default ConditionalRendering;"]},"metadata":{},"sourceType":"module"}